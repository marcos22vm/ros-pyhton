ARG BASE_IMAGE=ros:melodic
FROM ${BASE_IMAGE}

ARG ROS_PKG=ros_base
ENV ROS_DISTRO=melodic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace

# 
# Add the ROS deb repo to the apt sources list
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          git \
		cmake \
		build-essential \
		curl \
		wget \
		gnupg2 \
		lsb-release \
		ca-certificates \
    && rm -rf /var/lib/apt/lists/*

RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -


# 
# Install ROS packages
#
RUN apt-get update && \
    apt-get install -y python3-rospkg \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
		ros-melodic-`echo "${ROS_PKG}" | tr '_' '-'` \
		ros-melodic-image-transport \
		ros-melodic-vision-msgs \
    ros-melodic-turtlesim \
          python-rosdep \
          python-rosinstall \
          python-rosinstall-generator \
          python-wstool \
    && rm -rf /var/lib/apt/lists/*


#
# Init/Update rosdep
#

RUN apt-get update && \
    cd ${ROS_ROOT} && \
    rm -rf rosdep  \
    rosdep init && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*


RUN wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
RUN sudo apt-get update

RUN sudo apt-get install python3-catkin-tools -y
# 
# Setup entrypoint
#
WORKDIR /tmp
COPY ./backend .
COPY ./backend/ros_entrypoint.sh /ros_entrypoint.sh
WORKDIR /tmp/catkin_ws

#
# Install Dependenci
#
RUN rosdep install --from-paths src --ignore-src -r -y

#
# Remove old builds
#
RUN rm -rf ./build
RUN rm -rf ./devel

#
#Build
#

RUN catkin config --extend /opt/ros/melodic
RUN catkin build

#
# Configure entypoint
#

SHELL ["/bin/bash", "-c"]
RUN source ./devel/setup.bash

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
WORKDIR /
  